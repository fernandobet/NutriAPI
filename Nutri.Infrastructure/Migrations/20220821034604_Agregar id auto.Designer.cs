// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nutri.Infrastructure.Persistence;

#nullable disable

namespace Nutri.Infrastructure.Migrations
{
    [DbContext(typeof(NutriAppContext))]
    [Migration("20220821034604_Agregar id auto")]
    partial class Agregaridauto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Nutri.Domain.Models.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Azucar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Calorias")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Carbohidratos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FamiliaAlimentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Lipidos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MedicionAlimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Proteina")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FamiliaAlimentoId");

                    b.HasIndex("MedicionAlimentoId");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("Nutri.Domain.Models.ConsultaPaciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("ConsultasPacientes");
                });

            modelBuilder.Entity("Nutri.Domain.Models.ConsultaPacienteAlimentos", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("RenglonComida")
                        .HasColumnType("int");

                    b.Property<string>("Comida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConsultaPacienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("NumeroComida")
                        .HasColumnType("smallint");

                    b.HasKey("Id", "RenglonComida");

                    b.HasIndex("ConsultaPacienteId");

                    b.ToTable("ConsultasPacientesAlimentos");
                });

            modelBuilder.Entity("Nutri.Domain.Models.FamiliaAlimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FamiliasAlimentos");
                });

            modelBuilder.Entity("Nutri.Domain.Models.ListaSuplementoPersonalizada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DescripcionSuplemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListasSuplementosPersonalizada");
                });

            modelBuilder.Entity("Nutri.Domain.Models.MedicionAlimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MedicionesAlimentos");
                });

            modelBuilder.Entity("Nutri.Domain.Models.MedicionSuplemento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MedicionesSuplementos");
                });

            modelBuilder.Entity("Nutri.Domain.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Edad")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Estatura")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Nutri.Domain.Models.Suplemento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicionSuplementoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicionSuplementoId");

                    b.ToTable("Suplementos");
                });

            modelBuilder.Entity("Nutri.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Nutri.Domain.Models.Alimento", b =>
                {
                    b.HasOne("Nutri.Domain.Models.FamiliaAlimento", "FamiliaAlimento")
                        .WithMany("Alimento")
                        .HasForeignKey("FamiliaAlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nutri.Domain.Models.MedicionAlimento", "MedicionAlimento")
                        .WithMany("Alimento")
                        .HasForeignKey("MedicionAlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FamiliaAlimento");

                    b.Navigation("MedicionAlimento");
                });

            modelBuilder.Entity("Nutri.Domain.Models.ConsultaPaciente", b =>
                {
                    b.HasOne("Nutri.Domain.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Nutri.Domain.Models.ConsultaPacienteAlimentos", b =>
                {
                    b.HasOne("Nutri.Domain.Models.ConsultaPaciente", "ConsultaPaciente")
                        .WithMany("ConsultasPacienteAlimentos")
                        .HasForeignKey("ConsultaPacienteId");

                    b.Navigation("ConsultaPaciente");
                });

            modelBuilder.Entity("Nutri.Domain.Models.Suplemento", b =>
                {
                    b.HasOne("Nutri.Domain.Models.MedicionSuplemento", "MedicionSuplemento")
                        .WithMany("Suplementos")
                        .HasForeignKey("MedicionSuplementoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicionSuplemento");
                });

            modelBuilder.Entity("Nutri.Domain.Models.ConsultaPaciente", b =>
                {
                    b.Navigation("ConsultasPacienteAlimentos");
                });

            modelBuilder.Entity("Nutri.Domain.Models.FamiliaAlimento", b =>
                {
                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("Nutri.Domain.Models.MedicionAlimento", b =>
                {
                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("Nutri.Domain.Models.MedicionSuplemento", b =>
                {
                    b.Navigation("Suplementos");
                });
#pragma warning restore 612, 618
        }
    }
}
